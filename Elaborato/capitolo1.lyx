#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
% INTESTAZIONI
% -----------------

\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\rfoot{\thepage}
\chead{\includegraphics[width=\textwidth]{intestazione.pdf}}


% SFONDO
% ----------

\usepackage{eso-pic,graphicx}
\makeatletter
\newcommand\BackgroundPicture[2]{
\setlength{\unitlength}{1pt}
\put(0,\strip@pt\paperheight){
\parbox[t][\paperheight]{\paperwidth}{
\vfill
\centering\includegraphics[angle=#2]{#1}
\vfill
}
}
}
\makeatother
\end_preamble
\use_default_options true
\master tesi.lyx
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing double
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 2.5cm
\headheight 2cm
\headsep 0.5cm
\secnumdepth 1
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 1
\papercolumns 1
\papersides 1
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Raccolta ed Analisi Dei Requisiti
\end_layout

\begin_layout Section
Specifiche di Massima 
\end_layout

\begin_layout Standard
L’applicazione SmartLock nasce con lo scopo di sostituire gli standard sistemi
 di interfono per palazzi, case e appartamenti, con una versione digitalizzata
 che integra l’utilizzo del riconoscimento visivo (noto anche come FaceID)
 di un dispositivo iOS a dei sensori IoT.
 SmartLock implementerà quindi, oltre alle normali funzionalità di citofono
 e apertura da remoto di un cancello, anche il riconoscimento facciale degli
 eventuali inquilini di un appartamento con conseguente apertura automatica
 del cancello a cui è collegato.
 
\end_layout

\begin_layout Subsection
Attori
\end_layout

\begin_layout Standard
Gli attori coinvolti nell’utilizzo del sistema sono i seguenti: 
\end_layout

\begin_layout Itemize

\series bold
User
\series default
: identificato come una persona fisica, tipicamente inquilino di un appartamento
, il cui volto può essere registrato e mantenuto nella base di dati e utilizzato
 per l’apertura automatica del cancello.
 
\end_layout

\begin_layout Itemize

\series bold
Manager
\series default
: persona fisica con accesso a funzionalità avanzate del sistema.
 
\end_layout

\begin_layout Itemize

\series bold
External User
\series default
: identificato come una persona fisica, non residente all'interno dell'appartame
nto e richiedente l'accesso attraverso il citofono
\end_layout

\begin_layout Itemize

\series bold
Timer
\series default
: dispositivo utilizzato per il collegamento del sistema iOS alla rete IoT.
 
\end_layout

\begin_layout Itemize

\series bold
Vision
\series default
: framework di riconoscimento facciale
\end_layout

\begin_layout Itemize

\series bold
Factory Builder
\series default
: costruttore del dispositivo, con accesso privilegiato
\end_layout

\begin_layout Section
Requisiti Funzionali
\end_layout

\begin_layout Standard
Andiamo ora a descrivere i requisiti funzionali dell'applicazione, tutte
 le funzioni che devono essere implementate affinchè il sistema realizzato
 svolga il suo lavoro.
 Il riferimento relativo a tali requisiti è indicato dall'identificativo
 RF*:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="45page%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Riferimento
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Descrizione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette ad un utente di accedere al palazzo con il proprio identific
ativo (volto).
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF02
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette ad un utente di registrare/aggiornare il proprio identificat
ivo (volto).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF03
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette ad un utente di utilizzare l’interfaccia per visualizzare
 le informazioni sul palazzo e citofonare ad uno specifico appartamento.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF04
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette di attivare manualmente il processo di scansione del
 volto qualora non si attivasse in automatico.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF05
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette di inserire un codice di accesso numerico qualora l’utente
 non venga riconosciuto con il sistema descritto dal RF01.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF06
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette ad un utente di riprendere e visualizzare chi citofona
 al proprio appartamento.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF07
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette di fornire un pass momentaneo ad utenti esterni.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF08
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette di interfacciarsi con un eventuale sistema di allarme
 già presente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF09
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette al gestore di registrare nuovi utenti.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF10
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette al gestore di visualizzare la cronologia degli accessi.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Il sistema permette alla ditta di fabbrica di resettare il sistema, collegarlo
 al sistema di allarme, di gestire il gestore e di effettuare manutenzioni.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Requisiti Funzionali
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Requisiti Non Funzionali
\end_layout

\begin_layout Standard
Analogamente sono stati descritti i requisiti di tipo non funzionale, ossia
 relativi a richieste di performance e/o particolari scelte HW/SW necessarie
 per il corretto funzionamento del sistema.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="45page%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Riferimento
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Descrizione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NF01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’applicazione deve essere fluida ed intuitiva, al punto di rendere gradevole
 il suo utilizzo a discapito della versione classica di interfono.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NF02
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’hardware su cui l’applicazione software sarà sviluppata dovrà avere un
 sistema operativo iOS di versione 11.0 o successiva.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NF03
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’applicazione dovrà fornire una soluzione trasparente all’utente ad eventuali
 anomalie al fine di non interrompere il normale utilizzo del sistema.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NF04
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L'architettura Hardware del dispositivo utilizzato deve possedere tecnologia
 FaceID, in particolare una fotocamera TrueDepth.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Requisiti Non Funzionali
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Requisiti Architetturali
\end_layout

\begin_layout Standard
I requisiti progettuali esposte fino ad ora comportano una serie di scelte
 limitate dal punto di vista architetturale che portano l'implementazione
 a spostarsi in una particolare direzione.
 In particolare possiamo identificare una serie di requisiti architetturali
 necessari per la realizzazione di SmartLock.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="45page%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Riferimento
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Descrizione
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AR01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’applicazione verrà sviluppata in linguaggio Swift, orientato per applicazioni
 iOS.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AR02
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’ambiente di sviluppo utilizzato per l’implementazione è Xcode.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AR03
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
La comunicazione tra dispositivo e cancello sarà gestita dal protocollo
 Bluetooth, reso disponibile dalle librerie esistenti in Swift e utilizzabile
 grazie ad un modulo per l’Arduino collegato al relé che controlla il cancello.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
AR04
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
L’applicazione interna al sistema verrà sviluppata seguendo lo standard
 delle applicazioni iOS, ovvero adottando una architettura di tipo Model-View-Co
ntroller.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Requisiti Non Funzionali
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tecnologia True Depth
\end_layout

\begin_layout Standard
Il suo scopo è quello di creare una mappa tridimensionale del volto dell’utente
 possessore dello smartphone, analizzando oltre 30.000 punti del viso e memorizza
re tali informazioni per l’utilizzo successivo.
 Attraverso la presenza di numerosi sensori biometrici all'interno della
 fotocamera il volto di un utente è mappato su una griglia che misura le
 varie distanze per identificare i punti fondamentali del viso.
 Tutti questi punti proiettati sul viso saranno le coordinate necessarie
 per riprodurre fedelmente una copia del viso da memorizzare.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/truedepth.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
True Depth Camera
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
L’utilizzo principale della TrueDepth Camera riguarda lo sblocco del dispositivo
, ossia la configurazione del FaceID.
 Nel nostro progetto andiamo ad estendere tale concetto, applicandolo al
 caso d'uso di interesse che sfrutterà il riconoscimento del volto e la
 sua memorizzazione per avere accesso a funzionalità che necessitano di
 autenticazione, in questo caso l'apertura di un cancello.
 
\end_layout

\begin_layout Subsection
Xcode 
\end_layout

\begin_layout Standard
Xcode è l'ambiente di sviluppo integrato utilizzato per creare, testare,
 effettuare il debug delle applicazioni su piattaforma iOS.
\end_layout

\begin_layout Standard
Le principali caratteristiche di di Xcode sono le seguenti: 
\end_layout

\begin_layout Itemize

\series bold
Interface Builder.

\series default
 E' possibile costruire ogni vista relativa alla propria applicazione utilizzand
o un apposito editor chiamato Interface Builder.
 Questo permette di inserire oggetti nella GUI attraverso un'interfaccia
 semplice da utilizzare e che permette di aggiungere diverse informazioni
 all'oggetto (posizione, funzionalità, tipologia) e anche la loro connessione
 con l'applicazione stessa.
 Esiste comunque la possibilità di implementare tali oggetti via codice.
 
\end_layout

\begin_layout Itemize

\series bold
Assistant Editor.

\series default
 Durante la fase di programmazione si è spesso portati a dover modificare
 file correlati tra loro, l'assistant editor permette al programmatore di
 visualizzare i documenti in questione nella stessa finestra senza bisogno
 di aprire più editor alla volta.
 Questa caratteristica velocizza di molto il flusso di lavoro, aiutando
 molto il programmatore.
 
\end_layout

\begin_layout Itemize

\series bold
Identificazione e Correzione degli errori.
 
\series default
Xcode ispeziona il codice in tempo reale ed identifica anche errori di programma
zione.
 La riga errata viene evidenziata fornendo i dettagli relativi all'errore,
 talvolta vengono proposte delle possibili soluzioni per risolverli.
 
\end_layout

\begin_layout Itemize

\series bold
Controllo del Codice Sorgente,
\series default
 permette di salvare i file di progetto in una repository (Git, Bitbucket
 ecc.) direttamente da Xcode, mantenendo così un controllo della versione
 del progetto.
 Grazie a questa caratteristica è possibile lavorare in team allo stesso
 progetto, tenendo traccia delle modifiche fatte dai vari team members.
\end_layout

\begin_layout Subsection
Architettura iOS
\end_layout

\begin_layout Standard
L'architettura del sistema operativo iOS si articola in più livelli sovrapposti.
 Al livello più basso, iOS agisce come intermediario tra l'hardware sottostante
 e le applicazioni che appaiono sullo schermo.
 Ai livelli più bassi del sistema ci sono i servizi fondamentali e le tecnologie
 sulle quali si basano tutte le applicazioni mentre i livelli più alti contengon
o i servizi e le tecnologie più sofisticati.
 Quando si sviluppa una applicazione, dove possibile, si deve prediligere
 l'uso di 
\series bold
framework
\series default
 di alto livello piuttosto che dei servizi provenienti da livelli inferiori.
 Infatti i frameworks di livello superiore sono stati creati appositamente
 per fornire astrazioni ai livelli inferiori.
 Queste astrazioni, in genere, rendono molto più facile la scrittura di
 codice, perché riducono la quantità di righe di codice da scrivere e racchiudon
o caratteristiche potenzialmente complesse, come i socket per le connessioni
 e i thread.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/iOSArch.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
iOS Architettura a Strati
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Collegamento al Cancello: Arduino Project
\end_layout

\begin_layout Standard
Per la realizzazione del componente di sensoristica relativo all'apertura
 del cancello abbiamo sfruttato un controller Arduino collegato ad un modulo
 Bluetooth ed un Relay per l'invio del segnale di apertura al cancello.
 Di seguito riportiamo i dettagli del microcontrollore e del modulo bluetooth
 scelti:
\end_layout

\begin_layout Itemize
Arduino Uno
\end_layout

\begin_layout Itemize
Modulo DSD TECH HM-10 Bluetooth 4.0 BLE IBeacon UART
\end_layout

\begin_layout Standard
Per la prima realizzazione del sistema si è sostituito al cancello un collegamen
to ad un LED per testare la bontà del collegamento bluetooth.
 Lo schema di funzionamento è il seguente:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/arduinoschema.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Schema Arduino
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
I programmi di Arduino vengono caricati tramite l'Arduino IDE.
 Il programma caricato viene preso in gestione da un 
\series bold
bootstrapper
\series default
 che però, a differenza degli altri sistemi comuni, rimane in esecuzione
 per tutto il tempo.
 Infatti i programmi per Arduino non hanno main, ma hanno una funzione di
 loop che viene chiamata ripetutamente dal bootstrapper.
 Dalla definizione di Sistema Operativo ricordiamo che: un sistema operativo
 è un programma che viene avviato al momento del boot e rimane in esecuzione
 per tutto il tempo.
 Notiamo quindi che nel caso dell'Arduino il bootstrapper potrebbe essere
 considerato una sorta di sistema operativo, sebbene i programmi abbiano
 accesso diretto all'hardware.
 Il bootstrapper quindi alcune funzioni di un sistema operativo ma non tutte.
 Puo' essere assimilato a un "monitor residente" storicamente in uso nei
 sistemi batch.
\end_layout

\begin_layout Subsection
iOS SDK: Model View Controller Pattern
\end_layout

\begin_layout Standard
Una qualsiasi applicazione per iOS o per OS X che utilizza gli strumenti
 messi a disposizione dai vari framework, se progettata correttamente, è
 basata su un modello Model View Controller (MVC).
 MVC non solo realizza la separazione tra dati e interfaccia utente ma svincola
 anche la logica di controllo dell'applicazione dai dati.
 Il modello è basato sulla separazione dei compiti fra tre componenti software
 che interpretano tre ruoli principali:
\end_layout

\begin_layout Itemize

\series bold
Model
\series default
: gli oggetti che costituiscono il modello rappresentano parti- colari conoscenz
e e competenze, contengono i dati di un'applicazione e definiscono la logica
 di utilizzo di tali dati.
 Infatti una applicazione con MVC ben progettata ha tutti i dati importanti
 incapsulati in oggetti del modello.
 Tutti i dati che fanno parte dello stato persistente dell'applicazione
 devono risiedere negli oggetti del modello una volta che i dati vengono
 caricati nell'applicazione.
 Idealmente, un oggetto del modello non ha alcun collegamento esplicito
 con l'interfaccia utente.
 In generale un oggetto del model non dovrebbe occuparsi di compe è realizzata
 la grafica relativa ad esso.
\end_layout

\begin_layout Itemize

\series bold
View
\series default
: Un oggetto di tipo vista è in grado di visualizzar e a volte modificare
 i dati del modello.
 La view non dovrebbe essere responsabile per la memorizzazione dei dati
 che presenta, ma può memorizzare nella cache alcuni dati per motivi di
 prestazioni.
 Il framework UIKit definisce oggetti che possono essere riutilizzati assicurand
o lo stesso funzionamento in diverse applicazioni, garantendo un elevato
 livello di coerenza per aspetto e comportamento tra le applicazioni.
\end_layout

\begin_layout Itemize

\series bold
Controller
\series default
: Un oggetto di controllo funge da intermediario tra gli oggetti della view
 dell'applicazione e gli oggetti del modello.
 In un tipico modello MVC, quando gli utenti immettono un valore o indicano
 una scelta attraverso un oggetto di visualizzazione, il valore o la scelta
 viene comunicato ad un oggetto di controllo.
 L'oggetto di controllo può interpretare l'input dell'utente in alcune applicazi
oni specifiche o può indicare ad un oggetto del modello cosa fare con questo
 ingresso.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/mvc.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
MVC in iOS
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Analisi in Dettaglio dei Requisiti
\end_layout

\begin_layout Standard
La logica generale di funzionamento dell'applicazione riguarda appunto il
 riconoscimento automatico di un utente autorizzato con il conseguentemente
 accesso al sistema.
 In particolare sono previste due modalità di autenticazione: la prima,
 coincidente anche con il principale metodo di utilizzo del sistema, è il
 riconoscimento automatico tramite il volto di un Utente ed il conseguente
 accesso a quella che è la funzionalità di ingresso, ossia l'apertura di
 un cancello automatico; la seconda modalità è invece inserita come metodo
 secondario (o di backup) da utilizzare nell'eventualità che il primo metodo
 fallisca oppure se l'attore che sta utilizzando il sistema non dispone
 dei requisiti necessari per poter sfruttare il riconoscimento facciale,
 questa prevede l'utilizzo di un codice numerico univoco che svolge il ruolo
 di chiave di accesso.
 
\end_layout

\begin_layout Standard
Per migliorare la descrizione sono stati utilizzati vari diagrammi UML per
 modellare il funzionamento precedentemente descritto testualmente.
 In particolare presentiamo:
\end_layout

\begin_layout Itemize
Diagramma di Contesto con Boundary
\end_layout

\begin_layout Itemize
System Domain Model 
\end_layout

\begin_layout Itemize
Diagramma dei Casi D'Uso.
\end_layout

\begin_layout Subsection
Diagramma dei Casi D'Uso
\end_layout

\begin_layout Standard
La logica di funzionamento è anche descritta attraverso il seguente 
\series bold
Diagramma dei Casi D'uso
\series default
 in cui sono raccolti i casi d'uso relativi al sistema, ricavati analizzando
 i requisiti descritti in precedenza.
 Questo evidenzia quindi le modalità di utilizzo dell'applicazione da parte
 dei fruitori e quindi le interazioni tra il sistema e la componente umana
 e/o hardware in termini di funzionalità richieste.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/UseCases.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramma dei Casi D'Uso
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Diagramma di Contesto
\end_layout

\begin_layout Standard
Lo scopo è mostrare il contesto di una 
\series bold
View
\series default
.
 Il context rappresenta l’ambiente con cui il sistema o una specifica parte
 del sistema interagisce.
 UML non fornisce stereotipi per la realizzazione del diagramma di contesto
 pertanto sono stati utilizzati degli stereotipi custom per descrivere le
 entità coinvolte.
 Le entità principali che sono evidenziate nel diagramma di contesto sono:
\end_layout

\begin_layout Enumerate
Vision Framework: (framework) utilizzato per il riconoscimento del volto
\end_layout

\begin_layout Enumerate
GUI: (interfaccia utente) utilizzato per permettere l'interazione dell'utente
 con l'applicazione tramite interfaccia grafica
\end_layout

\begin_layout Enumerate
Alarm System: (sistema esterno)gestore di allarme da poter collegare al
 sistema per implementare eventuali sistemi di detection
\end_layout

\begin_layout Enumerate
Relay: (device esterno di output) interfaccia con il sistema di apertura
 del cancello
\end_layout

\begin_layout Standard
Le interazioni tra queste entità ed il nostro sistema sono gestite dal GRASP
 Controller, che andrà poi in dettaglio ad essere l'implementazione dell'applica
zione, il quale si interfaccia con il System Domain Model il quale descrive
 le relazioni tra le entità interne al sistema.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/context.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagramma di Contesto Caso D'Uso
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
System Domain Model
\end_layout

\begin_layout Standard
Il modello di dominio invece descrive il modello concettuale del sistema,
 in particolare del caso d'uso a cui facciamo riferimento Nel seguente domain
 model sono descritte le entità che compongono il sistema con maggiore rilevanza
 ed evidenziate le relazioni tra esse.
 La realizzazione in UML di tale diagramma si basa su un Class Diagram,
 dato che non sono forniti diagrammi specifici per un modello di dominio.
 Nel SDM presentato ogni classe fa riferimento ad un'entità in gioco nel
 sistema, in particolare le relazioni non trattegiate fanno riferimento
 a relazioni che sono di interesse per il caso d'uso che si sta studiando.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename immagini/sdm.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
System Domain Model Caso D'Uso
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In particolare nei capitoli successivi faremo riferimento al caso d'uso
 
\series bold
Accedi con Face ID
\series default
 che è stato scelto per essere implementato applicando un'approccio Agile,
 quindi incrementale.
 
\end_layout

\end_body
\end_document
